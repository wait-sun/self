# 规则在满足自己需求情况下，尽量做到精简。
# 机场订阅
proxy-providers:
  fastlink:
    url: "订阅机场"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
    exclude-filter: "(?i)网址|剩余|过期"
  tag:
    url: "订阅机场"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连


# 全局配置 
#port: 7890 # HTTP 代理端口
#socks-port: 7891 # SOCKS5 代理端口
#redir-port: 7892 # Linux 和 macOS 的 redir 代理端口
mixed-port: 7893 # HTTP(S) 和 SOCKS 代理混合端口
#tproxy-port: 7894

allow-lan: true # 允许局域网的连接
bind-address: "*" # 绑定 IP 地址，仅作用于 allow-lan 为 true，'*'表示所有地址
#authentication: # http,socks 入口的验证用户名，密码
#  - "username:password"

ipv6: false # 开启 IPv6 总开关，关闭阻断所有 IPv6 链接和屏蔽 DNS 请求 AAAA 记录
unified-delay: true # 开启统一延迟时，会计算 RTT，以消除连接握手等带来的不同类型节点的延迟差异
tcp-concurrent: true # TCP 并发连接所有 IP, 将使用最快握手的 TCP

log-level: warning # 日志等级 silent/error/warning/info/debug

#  find-process-mode has 3 values:always, strict, off
#  - always, 开启，强制匹配所有进程
#  - strict, 默认，由 mihomo 判断是否开启
#  - off, 不匹配进程，推荐在路由器上使用此模式
find-process-mode: 'off'

# interface-name: en0 # 设置出口网卡

# 全局 TLS 指纹，优先低于 proxy 内的 client-fingerprint
# 可选： "chrome","firefox","safari","ios","random","none" options.
# Utls is currently support TLS transport in TCP/grpc/WS/HTTP for VLESS/Vmess and trojan.
global-client-fingerprint: chrome

#修改此项以减少移动设备耗电问题
keep-alive-idle: 600 # TCP Keep Alive 的最大空闲时间
keep-alive-interval: 15 # TCP Keep Alive 包的间隔，单位为秒
disable-keep-alive: false

profile: # 存储 select 选择记录
  store-selected: true # 储存 API 对策略组的选择，以供下次启动时使用
  
  # 持久化 fake-ip
  store-fake-ip: true # 储存 fakeip 映射表，域名再次发生连接时，使用原有映射地址

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/mihomo/run/ui"
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"
    - "Mijia Cloud"
    - "+.push.apple.com"

# 入站  
tun:
  enable: true
  stack: mixed # system/gvisor/mixed
  dns-hijack:
    - any:53
    - tcp://any:53
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:53
  ipv6: false
  #respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.lan"
    - rule-set:private_domain
    - rule-set:cn_domain
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
  #proxy-server-nameserver:
  #  - https://223.5.5.5/dns-query
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29

# 节点信息
proxies: 
  - name: 直连
    type: direct
    udp: true

  - name: 拒绝
    type: reject

# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [默认代理,手动选择, 直连, 游戏节点, 家宽, 香港自动, 日本自动, 美国自动, 台湾自动]}
proxy-groups:
  - {name: 默认代理, type: select, include-all: true, exclude-filter: "(?i)拒绝|直连"}
  - {name: 手动选择, type: select, include-all: true, exclude-filter: "(?i)拒绝|直连"}  
  - {name: AdBlock, type: select, proxies: [直连, 拒绝, 默认代理]}
  - {name: 哔哩哔哩, <<: *pr}
  - {name: Ehentai, <<: *pr}
  - {name: YouTube, <<: *pr}
  - {name: Google, <<: *pr}
  - {name: 境外AI, <<: *pr}
  - {name: GitHub, <<: *pr}
  - {name: Microsoft, <<: *pr}
  #- {name: TikTok, <<: *pr}
  - {name: Telegram, <<: *pr}
  - {name: Twitter, <<: *pr}
  - {name: NETFLIX, <<: *pr}
  - {name: Speedtest, <<: *pr}
  - {name: PayPal, <<: *pr}

  #默认直连
  - {name: 苹果中国, type: select, proxies: [直连, 默认代理, 手动选择]}
  - {name: 微软中国, type: select, proxies: [直连, 默认代理, 手动选择]}
  - {name: 游戏下载, type: select, proxies: [直连, 默认代理, 手动选择]}
  - {name: OneDrive, type: select, proxies: [直连, 默认代理, 手动选择]}

  - {name: 漏网之鱼, <<: *pr}

  - {name: 游戏节点, type: select, include-all: true, filter: "(?i)游戏"}
  - {name: 家宽, type: select, include-all: true, filter: "(?i)家宽|家庭宽带|家用宽带|家用光纤"}
  #- {name: 香港故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  #- {name: 日本故转, type: fallback, include-all: true, tolerance: 20, interval: 300, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: 香港自动, type: url-test, exclude-type: direct, include-all: true, tolerance: 20, interval: 300, filter: "(?i)港|hk|hongkong|hong kong", exclude-filter: "(?i)台|日|韩|新|深|美|福利|星链"}
  - {name: 日本自动, type: url-test, exclude-type: direct, include-all: true, tolerance: 20, interval: 300, filter: "(?i)日|jp|japan", exclude-filter: "(?i)尼|福利|星链"}
  - {name: 美国自动, type: url-test, exclude-type: direct, include-all: true, tolerance: 20, interval: 300, filter: "(?i)美|us|unitedstates|united states", exclude-filter: "(?i)亚|福利|星链"}
  - {name: 台湾自动, type: url-test, exclude-type: direct, include-all: true, tolerance: 20, interval: 300, filter: "(?i)台|tw|taiwan", exclude-filter: "(?i)港|日|韩|新|美|深|福利|星链"}


# 规则匹配
rules:
  - RULE-SET,private_ip,直连,no-resolve
  - RULE-SET,private_domain,直连

  #手动优化
  - RULE-SET,direct_optimized,直连
  - RULE-SET,proxy_optimized,默认代理
  - RULE-SET,jd_domain,直连

  - RULE-SET,category_ads_all,AdBlock

  - RULE-SET,apple_cn_domain,苹果中国
  - RULE-SET,microsoft_cn_domain,微软中国
  - RULE-SET,onedrive_domain,OneDrive
  - RULE-SET,game_download,游戏下载
  - RULE-SET,category_games_cn,直连
  - RULE-SET,bilibili_domain,哔哩哔哩

  #网址操作
  - RULE-SET,ehentai_domain,Ehentai
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,google_domain,Google
  - RULE-SET,ai,境外AI
  - RULE-SET,github_domain,GitHub
  - RULE-SET,microsoft_domain,Microsoft
  #- RULE-SET,tiktok_domain,TikTok
  - RULE-SET,speedtest_domain,Speedtest
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,twitter_domain,Twitter
  - RULE-SET,netflix_domain,NETFLIX
  - RULE-SET,paypal_domain,PayPal

  - RULE-SET,cn_domain,直连

  #- RULE-SET,gfw_domain,默认代理
  - RULE-SET,geolocation-!cn,默认代理

  #ip操作
  - RULE-SET,cn_ip,直连
  - RULE-SET,google_ip,Google
  - RULE-SET,netflix_ip,NETFLIX
  - RULE-SET,telegram_ip,Telegram
  - RULE-SET,twitter_ip,Twitter


  - MATCH,漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  #手动优化
  direct_optimized: { <<: *class, url: "https://raw.githubusercontent.com/wait-sun/self/refs/heads/main/direct/direct.list"}
  proxy_optimized: { <<: *class, url: "https://raw.githubusercontent.com/wait-sun/self/refs/heads/main/proxy/proxy.list"}

  #直连
  #本地域名和ip
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  private_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  
  #国内网址
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  bilibili_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs"}

  #京东
  jd_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/jd.mrs"}


  #国内游戏
  category_games_cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-games%40cn.mrs"}

  #国内ip
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  #国内服务
  apple_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  microsoft_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/microsoft%40cn.mrs"}

  #游戏下载
  game_download: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-game-platforms-download%40cn.mrs"}

  #拒绝服务
  #广告
  category_ads_all: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.mrs"}

  #国外网址
  ai: {  <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  ehentai_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ehentai.mrs"}
  #tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  twitter_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/twitter.mrs"}

  #国外ip
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  twitter_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"}

  #兜底
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  